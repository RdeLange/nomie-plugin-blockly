import { SvelteComponentTyped } from "svelte";
export declare type Transform = {
    scrollX: number;
    scrollY: number;
    scale: number;
};
export declare type Locale = {
    rtl: boolean;
    msg: Record<string, string>;
};
import Blockly from 'blockly/core.js';
declare const __propDef: {
    props: {
        config?: Blockly.BlocklyOptions;
        locale: Locale;
        workspace?: Blockly.WorkspaceSvg;
        transform?: Transform;
    };
    events: {
        change: CustomEvent<undefined>;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export declare type ComponentProps = typeof __propDef.props;
export declare type ComponentEvents = typeof __propDef.events;
export declare type ComponentSlots = typeof __propDef.slots;
export default class Component extends SvelteComponentTyped<ComponentProps, ComponentEvents, ComponentSlots> {
}
export {};
